cc.Class({
    extends: cc.Component,

    properties: {

    },

    onLoad() {
        //---编辑碰撞组件
        //开启碰撞组件的编辑---选中editing属性，只有在编辑器中有效
        //修改碰撞组件相对于节点的偏移量（offset属性）---在碰撞中心区域点击左键拖拽
        //1---PolygonCollider---多边形碰撞组件
        //1.1---拖动点---拖动的结果会反映到多边形碰撞组件的points属性中
        //1.2---添加点---移动鼠标到2点连成的线段上，点击左键
        //1.3---删除点---按住ctrl或command，移动鼠标到多边形顶点上，点击左键
        //1.4---Regenerate Points功能---根据组件依附的节点上的Sprite组件的贴图的像素点来自动生成相应轮廓的顶点        
        //1.5---threshold属性---指明生成贴图轮廓顶点间的最小距离，值越大则生成的点越小
        //1.6---points属性---组件的顶点数组
        //2---CircleCollider---圆形碰撞组件
        //2.1---修改半径大小---悬浮鼠标在圆形编辑区域的边缘线上，边缘线会变亮，点击左键拖动
        //2.2---radius属性---组件的半径
        //3---BoxCollider---矩形碰撞组件
        //3.1---保持矩形长宽比例拖拽---按住shift键
        //3.2---保持矩形中心点位置不变---按住alt键
        //3.3---同时修改长宽---悬浮鼠标在顶点，点击左键拖拽
        //3.4---修改长或宽中的一个方向---悬浮鼠标在边缘线上，点击左键拖拽
        //3.5---size属性---组件的长宽

        //---碰撞分组管理
        //1---分组管理---菜单栏/项目/项目设置/分组管理
        //点击添加分组按钮后即可添加一个新的分组，默认会有一个Default分组；分组添加后不可以删除，但可以修改分组的名字
        //节点分组对应Node的group属性---节点的分组将关系到碰撞组件可以与哪些碰撞组件相碰撞
        //2---碰撞分组配对
        //配置一个分组对其他分组进行碰撞检测；运行时修改节点的group之后，需要调用Collider的apply，修改才会生效
    },

    // start () {

    // },

    // update (dt) {},
});