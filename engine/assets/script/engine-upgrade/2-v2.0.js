//---v2.0升级

//1---编辑器升级
{
    //1.1---Texture资源配置
    {
        //见官方文档
    }
    //1.2---RenderComponent组件设置
    {
        //新的基础组件类
        //所有的直接渲染组件都是继承这个组件，比如：Sprite、Label、Graphics等
        //最直观的改变就是：继承自它的渲染组件在属性检查器中都会包含混合模式的设置选项
        //可以通过该组件访问和这只渲染阶段的功能
    }
    //1.3---Camera组件使用
    {
        //见官方文档
    }
    //1.4---构建面板更新(微信小游戏)
    {
        //见官方文档
    }
    //1.5模块设置
    {
        //除了微信开放数据域中的模块设置比较特殊以外，在其他平台项目的模块设置中的的注意点：
        //在非微信开放数据域的其他平台中废弃了Canvas渲染模式，所以Canvas Renderer模块都可以剔除，但WebGL Renderer模块必须保留
        //原生平台目前不可剔除Native Network模块
    }
    //1.6---自定义引擎 Quick Compile
    {
        //见官方文档
    }
}

//2---引擎模块升级
{
    //2.1---底层渲染器升级
    {
        //在1.x中作为底层渲染器的_ccsg模块已经被彻底移除，组件层不再能访问任何sgNode
        //关键点：2.0除了在微信开放数据域中保留了有限的Canvas渲染能力以外，其他平台都移除了Canvas渲染，仅支持WebGL渲染
    }
    //2.2---启动流程升级
    {
        //在1.x中，引擎和用户脚本的加载顺序是：
        {
            //加载引擎
            //加载main.js
            //初始化引擎
            //初始化渲染器
            //加载项目插件脚本
            //加载项目主脚本
            //调用cc.game.onStart
        }
        //在2.0中，用户脚本可以干预到初始化逻辑，比如设置
        //cc.macro.ENABLE_TRANSPARENT_CANVAS（Canvas 背景是否透明）
        //cc.macro.ENABLE_WEBGL_ANTIALIAS（是否开启 WebGL 抗锯齿）
        //或者对引擎应用一些前置的定制代码
        //以前这些工作都必须定制main.js，在cc.game.onStart回调中添加，跟引擎默认初始化逻辑混在一起
        //在2.0中前置了用户脚本的加载
        {
            //加载引擎
            //加载main.js
            //加载项目插件脚本
            //加载项目主脚本
            //初始化引擎(Animation Manager, Collision Manager, Physics Manager, Widget Manager)
            //初始化渲染器
            //调用cc.game.onStart
        }
    }
    //2.3---平台代码分离和定制
    {
        //见官方文档
    }
    //2.4---事件系统升级
    {
        //见官方文档
    }
    //2.5---适配模式升级
    {
        //见官方文档
    }
    //2.6---RenderTexture 截图功能
    {
        //见官方文档
    }
    //2.7---TiledMap 功能简化
    {
        //见官方文档
    }
    //2.8---物理引擎升级
    {
        //见官方文档
    }
}